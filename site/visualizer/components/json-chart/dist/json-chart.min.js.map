{"version":3,"sources":["json-chart.min.js"],"names":["e","exports","module","define","amd","f","window","global","self","JSONChart","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"check","value","options","undefined","type","Array","isArray","chart","data","y","x","minX","maxX","step","j","validate"],"mappings":"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","file":"json-chart.min.js","sourcesContent":["/**\n * json-chart - JSON Chart validator\n * @version v1.0.0\n * @link https://github.com/cheminfo/json-chart\n * @license MIT\n */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.JSONChart=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nfunction check(value, options) {\n    if (options === undefined) options = {};\n    // we will try to determine the type of the value\n    // type could be:\n    // 1DY, 1DXY, 2DXYXY, 2DXXYY\n    var type = options.type;\n\n    if (!type) { // auto determination of type\n        if (Array.isArray(value)) { //\n            if (value[0]) {\n                if (Array.isArray(value[0])) {\n                    if (value.length == 2) {\n                        type = '2DXXYY';\n                    } else {\n                        type = '2DXYXY';\n                    }\n                } else { // 1D\n                    type = '1DY'; // by default we say it is just Y points ... dangerous !\n                }\n            }\n        }\n    }\n\n    var chart;\n\n    switch (type) {\n        case '1DY':\n            chart = {\n                data: {\n                    y: value\n                }\n            };\n            break;\n        case '1DXY':\n            var x = new Array(value.length / 2);\n            var y = new Array(value.length / 2);\n            for (var i = 0; i < value.length; i = i + 2) {\n                x[i / 2] = value[i];\n                y[i / 2] = value[i + 1];\n            }\n            chart = {\n                data: {\n                    x: x,\n                    y: y\n                }\n            };\n            break;\n        case '2DXYXY':\n            var x = new Array(value.length);\n            var y = new Array(value.length);\n            for (var i = 0; i < value.length; i++) {\n                x[i] = value[i][0];\n                y[i] = value[i][1];\n            }\n            chart = {\n                data: {\n                    x: x,\n                    y: y\n                }\n            };\n            break;\n        case '2DXXYY':\n            chart = {\n                data: {\n                    x: value[0],\n                    y: value[1]\n                }\n            };\n            break;\n        default:\n            chart = value;\n    }\n\n    // We will now check the chart\n    // Is there always some x data ????\n    if (!chart.data) {\n        chart.data = [];\n    }\n    if (!Array.isArray(chart.data)) {\n        chart.data = [chart.data]\n    }\n    for (var i = 0; i < chart.data.length; i++) {\n        var data = chart.data[i];\n        if (!data.y || !Array.isArray(data.y)) data.y = [];\n        if (data.y.length > 1) {\n            if (!data.x || !Array.isArray(data.x) || data.x.length != data.y.length) {\n                var minX = options.minX || 0;\n                var maxX = options.maxX || (data.y.length - 1);\n                var step = (maxX - minX) / (data.y.length - 1);\n                data.x = new Array(data.y.length);\n                for (var j = 0; j < data.y.length; j++) {\n                    data.x[j] = minX + step * j;\n                }\n            }\n        }\n    }\n\n    return chart;\n}\n\nexports.check = exports.validate = check;\n\n},{}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}